C Program
-----------------
int AddTwo(int a)
{
    a = a + 2;
    return a;
}

int main()
{
    int x = 3;
    x = AddTwo(x);
    return x;
}


SSA Output
------------------
;; Function AddTwo (AddTwo, funcdef_no=0, decl_uid=1793, cgraph_uid=0, symbol_order=0)

AddTwo (int a)
{
  int _3;

  <bb 2> [0.00%]:
  a_2 = a_1(D) + 2;
  _3 = a_2;
  return _3;

}



;; Function main (main, funcdef_no=1, decl_uid=1795, cgraph_uid=1, symbol_order=1)

main ()
{
  int x;
  int _5;

  <bb 2> [0.00%]:
  x_1 = 3;
  x_4 = AddTwo (x_1);
  _5 = x_4;
  return _5;

}



einline output
----------------------
;; Function AddTwo (AddTwo, funcdef_no=0, decl_uid=1793, cgraph_uid=0, symbol_order=0)

Iterations: 0
AddTwo (int a)
{
  int _3;

  <bb 2> [0.00%]:
  a_2 = a_1(D) + 2;
  _3 = a_2;
  return _3;

}



;; Function main (main, funcdef_no=1, decl_uid=1795, cgraph_uid=1, symbol_order=1)

Considering inline candidate AddTwo.
 Inlining AddTwo into main.
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.1807 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


main ()
{
  int D.1807;
  int a;
  int x;
  int _5;

  <bb 2> [100.00%]:
  x_1 = 3;
  a_3 = x_1 + 2;
  _6 = a_3;
  x_4 = _6;
  _5 = x_4;
  return _5;

}


Solutions
---------------
				1	The function body exists because it may be called from another file. The compiler cannot know about this before link time.
				
				2	If the function was declared with the "static" keyword (which, in C, is something  like "private  to this file  only") then  the function body will disappear if there is no caller within the file.
